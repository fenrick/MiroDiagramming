generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Board {
  id       Int      @id @default(autoincrement())
  name     String?  @unique
  board_id String?  @unique
  owner_id String?

  // Relations
  tags   Tag[]
  shapes Shape[]    @relation("BoardBoardId")
}

model Tag {
  id       Int    @id @default(autoincrement())
  board_id Int
  name     String

  // Relations
  board Board @relation(fields: [board_id], references: [id], onDelete: Cascade)

  @@unique([board_id, name])
  @@index([board_id])
}

model Shape {
  board_id  String
  shape_id  String
  payload   String
  updated_at DateTime @updatedAt

  // Relations: link to Board via unique board_id string
  board Board? @relation("BoardBoardId", fields: [board_id], references: [board_id], onDelete: Cascade)

  @@id([board_id, shape_id])
}

model User {
  id            Int      @id @default(autoincrement())
  user_id       String   @unique
  name          String
  access_token  String
  refresh_token String
  expires_at    DateTime
}

model CacheEntry {
  id         Int      @id @default(autoincrement())
  key        String   @unique
  value      String
  created_at DateTime @default(now())
}

model IdempotencyEntry {
  id         Int      @id @default(autoincrement())
  key        String   @unique
  accepted   Int
  created_at DateTime @default(now())

  @@index([created_at])
}
