# Example configuration for the Miro backend service
# Copy to `config.yaml` and adjust values for your environment.
database_url: sqlite:///./app.db
cors_origins:  # Allowed domains for cross-origin requests
  - "http://localhost:3000"
  - "https://app.example.com"
  - "https://admin.example.com"
  # - "https://*.example.org"  # Wildcard subdomains
  # - "*"  # Allow all origins (development only; not for production)
client_id: 3458764631456601999
client_secret: muxg3vN0LNzqpQZt2yq9mYdEqzCiEU2S
webhook_secret: eyJtaXJvLm9yaWdpbiI6ImV1MDEifQ_FEELThHdKTnPzlHrBkOK58Zd4Ws
oauth_auth_base: https://miro.com/oauth/authorize  # Base URL for OAuth authorisation
oauth_token_url: https://api.miro.com/v1/oauth/token  # OAuth token endpoint
oauth_scope: boards:read boards:write  # OAuth scopes requested
oauth_redirect_uri: http://localhost:3000/oauth/callback  # OAuth callback URL
logfire_service_name: miro-backend
logfire_send_to_logfire: false
http_timeout_seconds: 10.0  # HTTP client timeout for Miro API calls
idempotency_cleanup_seconds: 86400  # Interval between idempotency cleanup runs
idempotency_cache_size: 128  # Maximum number of idempotent responses to cache
idempotency_cache_ttl_seconds: 60.0  # TTL for idempotent response cache in seconds
encryption_key: ""  # Base64-encoded 32-byte key for encrypting tokens (optional)
