Migrate from v1 to v2 Jump to Content Documentation Resources Marketplace Community Documentation API Reference Changelog v2.0 Documentation Resources Marketplace Community Build your app Documentation Build your app Moon (Dark Mode) Sun (Light Mode) main Documentation Migrate from v1 to v2 Migrate from v1 to v2 Search Platform Essentials Introduction Web SDK vs REST API Getting started Developer team Create a Developer team Change the Developer team name Delete the Developer team Migrating a developer app App manifest Concepts Boards Board items Children inside parent items App card App card use cases Edit, update, and keep app cards synced Backend flow for app cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Enable 2-way sync between app cards and GitHub cards Card Connector Embed Events Frame Image Mind map (Experimental) Preview Shape Sticky note Storage Text Tag Migrate from v1 to v2 Web SDK comparison guide Web SDK reference guide REST API comparison guide REST API reference guide Web SDK Introduction Miro Web SDK and board items App panels and modals Guided onboarding Onboarding essentials 1) Create your first board item with the Web SDK 2) Update an item&#x27;s properties with `sync()` 3) Run your first app in Miro 4) Interact with your app in Miro 5) Join the conversation 6) Install a Marketplace app 7) Add Mirotone to an existing app Onboarding wrap-up Challenge: Where&#x27;s Miro? Submit and share your app 1) Share an app outside of a developer team 2) Understand app submission requirements 3) Publish a Miro app 4) Share your ideas with us Submit and share wrap-up In-depth training modules 1) Create your 1st Miro app locally 2) Build a full-stack Miro app Getting started Quickstart Video: try the Web SDK in less than 1 minute Build your first Hello World app Build a Web SDK app Build a REST API app Build a full-stack (Next.js) app Enable running apps as instant apps How-Tos &amp; tutorials Use the browser developer tools with the Miro Web SDK Update and sync item properties Add icon click to your app Add an icon to your app Add drag and drop to your app Add permission scopes to your app Add search and filter to your app Build a calendar app in Miro Convert sticky notes to shapes Create mind map from CSV Add custom actions to your app Deploy a Miro app Log in to a third-party service using OAuth Enable 2-way sync between app cards and GitHub cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Integrate a digital asset manager in Miro Convert frame coordinates to board coordinates SVG app icon optimization guidelines Upload images and SVGs as base64-encoded strings Connect the Miro Web SDK to a backend (Firebase) Video: Deploy a Next.js App on AWS Amplify Video: Integrate OpenAI + Miro Build collaborative app experiences Display banner/modal on a Miro board using DynamoDB Display banner/modal on a Miro board using AWS S3 Reference Interact with boards and items Rate limiting Error handling Board Card Board UI Viewport Notifications App card Experimental Realtime Events Tag Custom Action Management Shape Frame Image Sticky Note Shape experimental Embed Connector Unsupported Mindmap Node Preview Text Storage collection Storage Collaboration Session Attention Group History REST API Introduction Getting started Quickstart Video: try the REST API in less than 3 minutes Access Enterprise APIs Build your first Hello World REST API app Getting started with webhooks Webhooks using Python How-To&#x27;s &amp; tutorials Get started with OAuth 2.0 and Miro Enable REST API authentication from Miro&#x27;s Web SDK authorization Access Enterprise APIs Create sticky notes and tags Convert code to diagram with Miro PlantUML Get user info and email Create an image from a data URL source Work with connectors Securely manage boards and teams at scale Enable 2-way sync between app cards and GitHub cards Set up a test endpoint for webhooks with Pipedream Troubleshoot OAuth2.0 Video: OAuth Essentials for Frontenders Miro Node.js client Miro Node.js client Readme Miro Node.js client quickstart for task automation Miro Node.js client quickstart with OAuth and Express Implement data storage Reference documentation Miro Python client Reference Marketplace Miro Marketplace Get ready for Marketplace App design guidelines App security guidelines App development policy App listing guidelines Build and deploy your app Your Marketplace profile Publish your app Monetization Monetization with Miro + Stripe Monetization with Miro + Salable Provide pricing details for your app Developer benefits App Metrics SCIM API Introduction User lifecycle management Getting started Concepts Rate limits Errors Reference Users Groups Discovery features Live Embed Introduction Getting started Authentication oEmbed support How-Tos &amp; tutorials Live Embed with a direct link Live Embed view-only mode Live Embed with BoardsPicker for registered users Live Embed with BoardsPicker for unregistered users Reference Resources Resources overview Changelog Roadmap Mirotone Miro app examples Miro Postman —Åollection Policies Developer terms of use App development policy Lifecycle policy Deprecation policy Migrate from v1 to v2 This guide helps you migrate to the newer and more robust Developer Platform v2, highlighting key changes and necessary steps for a smooth transition. üìò Important information Following the end-of-life of Miro&#x27;s Developer Platform v1, its documentation has been removed and is no longer maintained. We encourage all developers to migrate to version 2 for the latest features, improvements, and support. However, if you need to reference the v1 API documentation, you can download it below: Miro v1 Developer Platform documentation Miro v1 Developer Platform API reference Note that the v1 documentation is provided &quot;as-is&quot; for historical reference only. No support or updates will be provided for this version. üöß OAuth2.0 endpoint and SCIM API Migration requirement does not apply to Miro&#x27;s OAuth2.0 endpoint and SCIM API . You can continue using the current version of these APIs. Miro Developer Platform v2 is the recommended platform for all new application development. If your app currently uses v1, please follow this guide to migrate to v2. To help developers migrate their existing applications from v1, we have created the following resources: Web SDK : Comparison Guide . A walkthrough of the major changes of the Web SDK and usage examples. Reference Guide . A full mapping of each Web SDK v1 endpoint and its equivalent in v2. REST API : Comparison Guide . A walkthrough of the major changes of the REST API, including an overview of the new object structures. Reference Guide . A full mapping of each REST API v1 endpoint and its equivalent in v2, including the request type, the endpoint URL, the headers required, and example payloads. Feature parity For the initial launch of the Developer Platform v2, we have focused on delivering the features needed to support the development of high quality integrations. As a result, many of the features that were available in v1 are now available in v2, including a number of new features that are unique to v2. A full list of v1 features and their v2 counterparts can be found in the reference guides. In some cases, we may have chosen not to bring a v1 feature to v2 if that feature had low usage or conflicted with our future plans. Each instance should be explained in the reference guide, but if you have any questions or concerns, please post them in our community forum . Understanding which version your app is on You can check which version of the Developer Platform your app uses from the Team Profile. Go to your Team Profile . Select the Your apps tab. In the Created apps section next to your app name, you&#x27;ll see the Web SDK Version . Updated about 1 year ago Table of Contents Feature parity Understanding which version your app is on