Board items Jump to Content Documentation Resources Marketplace Community Documentation API Reference Changelog v2.0 Documentation Resources Marketplace Community Build your app Documentation Build your app Moon (Dark Mode) Sun (Light Mode) main Documentation Board items Board items Search Platform Essentials Introduction Web SDK vs REST API Getting started Developer team Create a Developer team Change the Developer team name Delete the Developer team Migrating a developer app App manifest Concepts Boards Board items Children inside parent items App card App card use cases Edit, update, and keep app cards synced Backend flow for app cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Enable 2-way sync between app cards and GitHub cards Card Connector Embed Events Frame Image Mind map (Experimental) Preview Shape Sticky note Storage Text Tag Migrate from v1 to v2 Web SDK comparison guide Web SDK reference guide REST API comparison guide REST API reference guide Web SDK Introduction Miro Web SDK and board items App panels and modals Guided onboarding Onboarding essentials 1) Create your first board item with the Web SDK 2) Update an item&#x27;s properties with `sync()` 3) Run your first app in Miro 4) Interact with your app in Miro 5) Join the conversation 6) Install a Marketplace app 7) Add Mirotone to an existing app Onboarding wrap-up Challenge: Where&#x27;s Miro? Submit and share your app 1) Share an app outside of a developer team 2) Understand app submission requirements 3) Publish a Miro app 4) Share your ideas with us Submit and share wrap-up In-depth training modules 1) Create your 1st Miro app locally 2) Build a full-stack Miro app Getting started Quickstart Video: try the Web SDK in less than 1 minute Build your first Hello World app Build a Web SDK app Build a REST API app Build a full-stack (Next.js) app Enable running apps as instant apps How-Tos &amp; tutorials Use the browser developer tools with the Miro Web SDK Update and sync item properties Add icon click to your app Add an icon to your app Add drag and drop to your app Add permission scopes to your app Add search and filter to your app Build a calendar app in Miro Convert sticky notes to shapes Create mind map from CSV Add custom actions to your app Deploy a Miro app Log in to a third-party service using OAuth Enable 2-way sync between app cards and GitHub cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Integrate a digital asset manager in Miro Convert frame coordinates to board coordinates SVG app icon optimization guidelines Upload images and SVGs as base64-encoded strings Connect the Miro Web SDK to a backend (Firebase) Video: Deploy a Next.js App on AWS Amplify Video: Integrate OpenAI + Miro Build collaborative app experiences Display banner/modal on a Miro board using DynamoDB Display banner/modal on a Miro board using AWS S3 Reference Interact with boards and items Rate limiting Error handling Board Card Board UI Viewport Notifications App card Experimental Realtime Events Tag Custom Action Management Shape Frame Image Sticky Note Shape experimental Embed Connector Unsupported Mindmap Node Preview Text Storage collection Storage Collaboration Session Attention Group History REST API Introduction Getting started Quickstart Video: try the REST API in less than 3 minutes Access Enterprise APIs Build your first Hello World REST API app Getting started with webhooks Webhooks using Python How-To&#x27;s &amp; tutorials Get started with OAuth 2.0 and Miro Enable REST API authentication from Miro&#x27;s Web SDK authorization Access Enterprise APIs Create sticky notes and tags Convert code to diagram with Miro PlantUML Get user info and email Create an image from a data URL source Work with connectors Securely manage boards and teams at scale Enable 2-way sync between app cards and GitHub cards Set up a test endpoint for webhooks with Pipedream Troubleshoot OAuth2.0 Video: OAuth Essentials for Frontenders Miro Node.js client Miro Node.js client Readme Miro Node.js client quickstart for task automation Miro Node.js client quickstart with OAuth and Express Implement data storage Reference documentation Miro Python client Reference Marketplace Miro Marketplace Get ready for Marketplace App design guidelines App security guidelines App development policy App listing guidelines Build and deploy your app Your Marketplace profile Publish your app Monetization Monetization with Miro + Stripe Monetization with Miro + Salable Provide pricing details for your app Developer benefits App Metrics SCIM API Introduction User lifecycle management Getting started Concepts Rate limits Errors Reference Users Groups Discovery features Live Embed Introduction Getting started Authentication oEmbed support How-Tos &amp; tutorials Live Embed with a direct link Live Embed view-only mode Live Embed with BoardsPicker for registered users Live Embed with BoardsPicker for unregistered users Reference Resources Resources overview Changelog Roadmap Mirotone Miro app examples Miro Postman сollection Policies Developer terms of use App development policy Lifecycle policy Deprecation policy Board items Board items help board users share information on a board. Board items are visual representations of the information that users share on the board. A board item can be a piece of text, a card, a link, an image, a geometric shape, and so on. Board items that include external resources, such as images or documents, must use URLs pointing to online available resources: The resource URL must be publicly available. The resource URL must be absolute. Relative URL paths pointing to local assets aren&#x27;t supported. Supported board items The following board items are currently supported: Board item Description App card App cards enable card information exchange between a Miro board and an external tool that also uses cards as a structured information format. This makes it possible to organize information on the board in a structured way, and to sync the data with a third-party tool such as Trello, Monday, or Asana. Card Creates a task card that can be assigned to a user. Useful to monitor workload and task progress; manage projects using a Miro board; sync a board with a third-party project management tool. Connector Draws lines on a board to link objects. Helpful when building diagrams and flowcharts. Embed Enables embedding external content through the Embedly service. This enables support for hundreds of content providers : videos, screencasts, slide decks, images, audio, code repositories, and so on. Frame A container to group content on a board such as shapes, text, and images. Frames help structure and organize board content: they enable exporting board content to PDF format, or to save it as a presentation; they are indexed so that it is easier to find board content; when a board presentation mode is enabled, indexed frames define the sequence of the slides in the presentation. Image Adds an image to a board by letting users drag and drop the image on the target board. Mind map (Experimental) Experimental Allows you to programmatically represent and interact with complex structures of information on Miro boards. Preview ℹ️ This board item is currently supported only in the Web SDK 2.0. Renders a preview of the content a pasted URL points to. When users paste to a board a URL pointing to a web page, the preview item renders the Open Graph data of the URL as rich media content. Shape Adds geometric and arrow shapes to a board. Useful when drawing flowcharts and diagrams. Sticky note Adds a sticky note to a board. Useful to take quick notes while brainstorming, or to drive design thinking sessions. Text Inserts a text input field on a board. It&#x27;s possible to edit the text with a rich text editor. Unsupported items The Miro Web SDK and REST APIs don&#x27;t yet support all board items. Unsupported items are grouped under a generic item type called unsupported items . We&#x27;re planning to gradually support them in future releases. Currently, it&#x27;s not possible to create these items or update their contents programmatically. Currently, the Miro Web SDK supports reading and updating x and y coordinates of unsupported items. Unsupported item Description Code block Adds code blocks to boards for collaborative programming, debugging, and problem-solving. Document Embeds a document—for example, a PDF file, a presentation slide deck, or a Google doc—in a board so that it is possible to view it from within the board. Emoji Adds emojis to a board. Kanban Creates Kanban boards that can be populated with Cards to manage product delivery. Mind map Not supported in the REST API. Experimental support in the Web SDK. Helps visually represent thought processes and hierarchical relationships. Mockup Enables using wireframes to create mock-ups to prototype interaction interfaces quickly and efficiently. Stroke It simulates a pen stroke to draw lines on a board. Table text Enables adding, editing, and deleting text from tables on a board. Table Enables adding, editing, and deleting tables on a board. USM User Story Mapping (USM) helps structure, organize, and plan user tasks and product releases. See also SDK reference documentation for items REST API reference documentation for items Updated almost 2 years ago What&#x27;s next After the overview about board items, learn about parent and child items. Children inside parent items Table of Contents Supported board items Unsupported items See also