Introduction Jump to Content Documentation Resources Marketplace Community Documentation API Reference Changelog v2.0 Documentation Resources Marketplace Community Build your app Documentation Build your app Moon (Dark Mode) Sun (Light Mode) main Documentation Introduction Introduction Search Platform Essentials Introduction Web SDK vs REST API Getting started Developer team Create a Developer team Change the Developer team name Delete the Developer team Migrating a developer app App manifest Concepts Boards Board items Children inside parent items App card App card use cases Edit, update, and keep app cards synced Backend flow for app cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Enable 2-way sync between app cards and GitHub cards Card Connector Embed Events Frame Image Mind map (Experimental) Preview Shape Sticky note Storage Text Tag Migrate from v1 to v2 Web SDK comparison guide Web SDK reference guide REST API comparison guide REST API reference guide Web SDK Introduction Miro Web SDK and board items App panels and modals Guided onboarding Onboarding essentials 1) Create your first board item with the Web SDK 2) Update an item&#x27;s properties with `sync()` 3) Run your first app in Miro 4) Interact with your app in Miro 5) Join the conversation 6) Install a Marketplace app 7) Add Mirotone to an existing app Onboarding wrap-up Challenge: Where&#x27;s Miro? Submit and share your app 1) Share an app outside of a developer team 2) Understand app submission requirements 3) Publish a Miro app 4) Share your ideas with us Submit and share wrap-up In-depth training modules 1) Create your 1st Miro app locally 2) Build a full-stack Miro app Getting started Quickstart Video: try the Web SDK in less than 1 minute Build your first Hello World app Build a Web SDK app Build a REST API app Build a full-stack (Next.js) app Enable running apps as instant apps How-Tos &amp; tutorials Use the browser developer tools with the Miro Web SDK Update and sync item properties Add icon click to your app Add an icon to your app Add drag and drop to your app Add permission scopes to your app Add search and filter to your app Build a calendar app in Miro Convert sticky notes to shapes Create mind map from CSV Add custom actions to your app Deploy a Miro app Log in to a third-party service using OAuth Enable 2-way sync between app cards and GitHub cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Integrate a digital asset manager in Miro Convert frame coordinates to board coordinates SVG app icon optimization guidelines Upload images and SVGs as base64-encoded strings Connect the Miro Web SDK to a backend (Firebase) Video: Deploy a Next.js App on AWS Amplify Video: Integrate OpenAI + Miro Build collaborative app experiences Display banner/modal on a Miro board using DynamoDB Display banner/modal on a Miro board using AWS S3 Reference Interact with boards and items Rate limiting Error handling Board Card Board UI Viewport Notifications App card Experimental Realtime Events Tag Custom Action Management Shape Frame Image Sticky Note Shape experimental Embed Connector Unsupported Mindmap Node Preview Text Storage collection Storage Collaboration Session Attention Group History REST API Introduction Getting started Quickstart Video: try the REST API in less than 3 minutes Access Enterprise APIs Build your first Hello World REST API app Getting started with webhooks Webhooks using Python How-To&#x27;s &amp; tutorials Get started with OAuth 2.0 and Miro Enable REST API authentication from Miro&#x27;s Web SDK authorization Access Enterprise APIs Create sticky notes and tags Convert code to diagram with Miro PlantUML Get user info and email Create an image from a data URL source Work with connectors Securely manage boards and teams at scale Enable 2-way sync between app cards and GitHub cards Set up a test endpoint for webhooks with Pipedream Troubleshoot OAuth2.0 Video: OAuth Essentials for Frontenders Miro Node.js client Miro Node.js client Readme Miro Node.js client quickstart for task automation Miro Node.js client quickstart with OAuth and Express Implement data storage Reference documentation Miro Python client Reference Marketplace Miro Marketplace Get ready for Marketplace App design guidelines App security guidelines App development policy App listing guidelines Build and deploy your app Your Marketplace profile Publish your app Monetization Monetization with Miro + Stripe Monetization with Miro + Salable Provide pricing details for your app Developer benefits App Metrics SCIM API Introduction User lifecycle management Getting started Concepts Rate limits Errors Reference Users Groups Discovery features Live Embed Introduction Getting started Authentication oEmbed support How-Tos &amp; tutorials Live Embed with a direct link Live Embed view-only mode Live Embed with BoardsPicker for registered users Live Embed with BoardsPicker for unregistered users Reference Resources Resources overview Changelog Roadmap Mirotone Miro app examples Miro Postman сollection Policies Developer terms of use App development policy Lifecycle policy Deprecation policy Introduction A full-fledged JavaScript/TypeScript SDK to build apps that interact with Miro boards to enhance the user experience. The Miro Web SDK 2.0 is a powerful toolkit that allows you to extend Miro’s functionality. It provides everything you need to build apps that run within Miro boards, communicate with them, and enhance their capabilities. This SDK enables you to create engaging, interactive experiences for users by leveraging Miro’s features. The Miro Web SDK and the Miro REST API complement each other, providing a comprehensive toolkit for building apps that interact with Miro boards and items. While the Web SDK is ideal for creating apps that run within the Miro interface and provide real-time interactions, the REST API allows you to manage data and perform operations outside of the Miro client, enabling broader integrations and automation. With the Miro Web SDK, you can use methods to create, update, and remove board items , control panels and modals , and interact with the viewport . You can also take advantage of events to listen for and respond to actions on the board in real time. These tools are designed to help you develop apps that enhance the functionality of Miro boards, enabling users to interact with board objects dynamically. Features like app panels and modals help you structure intuitive user workflows, while methods and events enable real-time interactivity. Whether you’re building apps for internal use within your organization or targeting millions of Miro users worldwide, the Miro Web SDK gives you the tools to succeed. To share your apps with the broader Miro community, you can publish them on the Miro Marketplace , where users can discover and install them. Get to know Miro Web SDK Before you start crafting your first app, get to know a few basic concepts about the Miro Web SDK. The board loads the Web SDK and all installed apps for the team that the current user belongs to. When users initiate an action with an installed app, the Web SDK checks if the app is authorized. If it&#x27;s not, it triggers the user authorization flow . The Web SDK allows app code to run only after users have granted the app the required permissions . Figure 1. The Web SDK checks if the app is authorized. App code can run only after users have authorized. After authorizing an app, the Web SDK enables the app to control board items , and to implement user flows through app panels and modals . Figure 2. An overview of the basic relationships and interactions between board, board items, and apps through the Miro Web SDK. The Miro Web SDK exposes the following properties to enable access to an underlying set of methods, properties, and events: Property Enables access to: board Methods to perform CRUD operations on board items, get board-level information, get selected items on the board, get the Web SDK token, get and set metadata. board.ui Methods to open and close panels and modals; events . board.viewport Methods to get, set, and zoom to the viewport. board.notifications Methods to display informational and error notification messages on the board UI. Figure 3. Through miro.board , miro.board.ui , miro.board.viewport , and miro.board.notifications the Web SDK enables access to its set of methods and events to interact with board items, the board UI, the viewport, and board UI notifications. Get started Get started right away with our collection of Miro App Examples . These sample apps are a good starting point to get yourself familiar yourself with the Miro Web SDK and its feature set. You don&#x27;t need to start from scratch: leverage the Mirotone CSS component library to create app UIs that fit seamlessly on a Miro board. You can deploy and host your apps on Digital Ocean (with Dokku) , Firebase Glitch , Heroku , Render , Vercel , and many other alternatives. See also Try the Web SDK in less than 1 minute (video) Miro Web SDK quickstart Build your first Hello, World app Miro Web SDK reference Updated 10 months ago What&#x27;s next Create your Developer team to start building your first Web SDK Hello, world app. Create a Developer team Build your first Hello, World app Table of Contents Get to know Miro Web SDK Get started See also