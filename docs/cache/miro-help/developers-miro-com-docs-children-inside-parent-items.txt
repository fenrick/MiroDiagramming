Children inside parent items Jump to Content Documentation Resources Marketplace Community Documentation API Reference Changelog v2.0 Documentation Resources Marketplace Community Build your app Documentation Build your app Moon (Dark Mode) Sun (Light Mode) main Documentation Children inside parent items Children inside parent items Search Platform Essentials Introduction Web SDK vs REST API Getting started Developer team Create a Developer team Change the Developer team name Delete the Developer team Migrating a developer app App manifest Concepts Boards Board items Children inside parent items App card App card use cases Edit, update, and keep app cards synced Backend flow for app cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Enable 2-way sync between app cards and GitHub cards Card Connector Embed Events Frame Image Mind map (Experimental) Preview Shape Sticky note Storage Text Tag Migrate from v1 to v2 Web SDK comparison guide Web SDK reference guide REST API comparison guide REST API reference guide Web SDK Introduction Miro Web SDK and board items App panels and modals Guided onboarding Onboarding essentials 1) Create your first board item with the Web SDK 2) Update an item&#x27;s properties with `sync()` 3) Run your first app in Miro 4) Interact with your app in Miro 5) Join the conversation 6) Install a Marketplace app 7) Add Mirotone to an existing app Onboarding wrap-up Challenge: Where&#x27;s Miro? Submit and share your app 1) Share an app outside of a developer team 2) Understand app submission requirements 3) Publish a Miro app 4) Share your ideas with us Submit and share wrap-up In-depth training modules 1) Create your 1st Miro app locally 2) Build a full-stack Miro app Getting started Quickstart Video: try the Web SDK in less than 1 minute Build your first Hello World app Build a Web SDK app Build a REST API app Build a full-stack (Next.js) app Enable running apps as instant apps How-Tos &amp; tutorials Use the browser developer tools with the Miro Web SDK Update and sync item properties Add icon click to your app Add an icon to your app Add drag and drop to your app Add permission scopes to your app Add search and filter to your app Build a calendar app in Miro Convert sticky notes to shapes Create mind map from CSV Add custom actions to your app Deploy a Miro app Log in to a third-party service using OAuth Enable 2-way sync between app cards and GitHub cards Enable REST API authentication from Miro&#x27;s Web SDK authorization Integrate a digital asset manager in Miro Convert frame coordinates to board coordinates SVG app icon optimization guidelines Upload images and SVGs as base64-encoded strings Connect the Miro Web SDK to a backend (Firebase) Video: Deploy a Next.js App on AWS Amplify Video: Integrate OpenAI + Miro Build collaborative app experiences Display banner/modal on a Miro board using DynamoDB Display banner/modal on a Miro board using AWS S3 Reference Interact with boards and items Rate limiting Error handling Board Card Board UI Viewport Notifications App card Experimental Realtime Events Tag Custom Action Management Shape Frame Image Sticky Note Shape experimental Embed Connector Unsupported Mindmap Node Preview Text Storage collection Storage Collaboration Session Attention Group History REST API Introduction Getting started Quickstart Video: try the REST API in less than 3 minutes Access Enterprise APIs Build your first Hello World REST API app Getting started with webhooks Webhooks using Python How-To&#x27;s &amp; tutorials Get started with OAuth 2.0 and Miro Enable REST API authentication from Miro&#x27;s Web SDK authorization Access Enterprise APIs Create sticky notes and tags Convert code to diagram with Miro PlantUML Get user info and email Create an image from a data URL source Work with connectors Securely manage boards and teams at scale Enable 2-way sync between app cards and GitHub cards Set up a test endpoint for webhooks with Pipedream Troubleshoot OAuth2.0 Video: OAuth Essentials for Frontenders Miro Node.js client Miro Node.js client Readme Miro Node.js client quickstart for task automation Miro Node.js client quickstart with OAuth and Express Implement data storage Reference documentation Miro Python client Reference Marketplace Miro Marketplace Get ready for Marketplace App design guidelines App security guidelines App development policy App listing guidelines Build and deploy your app Your Marketplace profile Publish your app Monetization Monetization with Miro + Stripe Monetization with Miro + Salable Provide pricing details for your app Developer benefits App Metrics SCIM API Introduction User lifecycle management Getting started Concepts Rate limits Errors Reference Users Groups Discovery features Live Embed Introduction Getting started Authentication oEmbed support How-Tos &amp; tutorials Live Embed with a direct link Live Embed view-only mode Live Embed with BoardsPicker for registered users Live Embed with BoardsPicker for unregistered users Reference Resources Resources overview Changelog Roadmap Mirotone Miro app examples Miro Postman —Åollection Policies Developer terms of use App development policy Lifecycle policy Deprecation policy Children inside parent items Parent items can contain other board items as their children. The parent/child relationship affects the positioning reference and item resizing. Relationship between parent and child items Some board items can contain other items. In this scenario, the containing item is a parent, and any nested items inside it are its children. Placing an item inside another one creates a parent/child relationship between the items. This relationship affects parents and children in the following ways: As long as a child item is inside a parent, its x and y positioning reference is relative to the containing parent item. Relative positioning enables moving a parent item on the board along with its children, without affecting the visual layout of the children inside the parent. If an app attempts to programmatically update a parent item to resize it, the operation may fail if one or more children fall outside the parent item after resizing it. This isn&#x27;t allowed, because it would break the parent/child relationship between the items. Supported and unsupported parent items At this time, the Miro Developer Platform doesn&#x27;t support all board items that can act as parents. We plan to extend support in the future to include also currently unsupported items. Supported item that can be a parent of nested child items: Frame Unsupported items that can be parents of nested child items: Kanban Mind Map Table User Story Mapping (USM) Retrieval of parent with nested children Programmatically retrieving a parent with its children returns different data, depending on whether the parent is supported or not. The Web SDK can programmatically retrieve board items‚Äîincluding parents and children‚Äîin the following ways: The get() method The getSelection() method The selection:update event. Retrieval of supported parent with children Retrieving a parent frame with nested children returns the complete data tree structure of the frame and its children, with all their supported properties and values. Besides the already mentioned methods and the event , the Web SDK can programmatically retrieve a parent frame along with its children with the following method: getChildren() Retrieval of unsupported parent with children Retrieving an unsupported parent item containing supported child items returns complete data objects for the supported children items. However, since the parent is unsupported, the Web SDK has limited access to the children: The returned width and height values of the child items are read-only. The returned x and y coordinates of the child items have the -Infinity value, and they are read-only. üöß Retrieving a mind map parent item doesn&#x27;t return its children. The operation returns only the data object for the unsupported mind map item. CRUD actions on children of unsupported parent It&#x27;s possible to update the properties of supported items that are children of an unsupported parent item. For example: content or style . However, since the parent is unsupported, it&#x27;s not possible to: Get the actual position of the child items. Their returned x and y coordinates have the -Infinity value, and they are read-only. Update their x or y coordinates to change their position on the board. Update their width or height to resize them. See also Frame item reference documentation Position relative to parent items Position and coordinates Updated almost 2 years ago What&#x27;s next To learn how the Web SDK methods work, check the reference documentation. Miro Web SDK reference Table of Contents Relationship between parent and child items Supported and unsupported parent items Retrieval of parent with nested children Retrieval of supported parent with children Retrieval of unsupported parent with children CRUD actions on children of unsupported parent See also